AWSTemplateFormatVersion: 2010-09-09
Description: Miguel Vasquez / Udacity Challenge - This template deploys a Load Balancer, Launch Configuration, Sec Groups

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      Tags: 
      - Key: Name
        Value: !Sub ${EnvironmentName} LB SG

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      Tags: 
      - Key: Name
        Value: !Sub ${EnvironmentName} LB SG

  ProfileForS3Access:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - udagram

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: !Ref ProfileForS3Access
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          sudo rm index.html
          aws s3 cp s3://udagram-321723638230/udagram.zip .
          unzip -o udagram.zip
          rm udagram.zip
          sudo chmod 755 -R index_files
          sudo service apache2 restart
          sudo yum install -y https://s3.region.amazonaws.com/amazon-ssm-region/latest/linux_amd64/amazon-ssm-agent.rpm
          sudo systemctl enable amazon-ssm-agent
          sudo systemctl start amazon-ssm-agent
          sudo systemctl status amazon-ssm-agent
      ImageId: ami-013f17f36f8b1fefb
      SecurityGroups:
      - Ref: WebServerSecGroup
      InstanceType: t2.medium
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '15'

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '2'
      MaxSize: '4'
      TargetGroupARNs:
        - Ref: WebAppTargetGroup

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
      - Ref: LBSecGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"

Outputs: 

  LBSecGroup: 
      Description: A reference to the LB Sec Group
      Value: !Ref LBSecGroup
      Export:
        Name: !Sub ${EnvironmentName}-LBSecGrpId

  WSSecGroup: 
      Description: A reference to the WS Sec Group
      Value: !Ref WebServerSecGroup
      Export:
        Name: !Sub ${EnvironmentName}-WSSecGrpId

  WebAppLaunchConfig: 
      Description: A reference to the Launch Config
      Value: !Ref WebAppLaunchConfig
      Export:
        Name: !Sub ${EnvironmentName}-WebAppLaunchConfig

  WebAppAutoScalingGroup: 
      Description: A reference to the Auto Scaling Group Config
      Value: !Ref WebAppGroup
      Export:
        Name: !Sub ${EnvironmentName}-WebAppAutoScalingGroup

  WebAppLB: 
    Description: A reference to the Load Balancer
    Value: !Ref WebAppLB
    Export:
      Name: !Sub ${EnvironmentName}-WebAppLB
      DNSName: !Sub ${EnvironmentName}-WebAppLB

  WebAppLBDNS: 
    Description: A reference to the DNS url
    Value: !Sub http://${WebAppLB.DNSName}
    Export:
      Name: !Sub ${EnvironmentName}-WebAppLBDNS
    
  WebAppTargetGroup: 
    Description: A reference to the Target Group
    Value: !Ref WebAppTargetGroup
    Export:
      Name: !Sub ${EnvironmentName}-WebAppTargetGroup